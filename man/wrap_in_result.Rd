% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Result.R
\name{wrap_in_result}
\alias{wrap_in_result}
\title{Wrap a value in a \code{Result} object depending on its class.}
\usage{
wrap_in_result(x, ...)
}
\arguments{
\item{x}{The object to be wrapped into a \code{Result}.}

\item{...}{Additional optional arguments that may be used by individual methods.}
}
\description{
This function is an important helper function for the \code{result} function
wrapper.
}
\details{
When a wrapped \code{fn} successfully computes and returns a value, it is wrapped
into a \code{Result} object according to the following rules.

A value of any class (i.e. \code{S7::class_any}) is wrapped in a \code{Success} by default.
Errors and Warnings (i.e. \code{S7::class_error | S7::class_warning}) are wrapped in a \code{Failure} by default
A \code{Result} is passed through as is - no point wrapping a \code{Result} in a \code{Result}.

These rules are implemented through this function's method dispatch, and so
class authors can provide methods to dictate how their specific class should
be wrapped. However it is expected that the simple rules already defined should
be sufficient for the vast majority of cases.
}
\seealso{
\code{\link[=result]{result()}}
}
