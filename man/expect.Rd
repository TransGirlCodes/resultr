% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Generics.R
\name{expect}
\alias{expect}
\title{Get the wrapped value from a \code{Result} or \code{Option} object}
\usage{
expect(x, msg, ...)
}
\arguments{
\item{x}{The object to unwrap.}

\item{msg}{The message to be included if a condition is thrown.}
}
\value{
The value wrapped by \code{x} if a condition was not thrown as result of a \code{Failure} or \code{Nothing} value.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#stable}{\figure{lifecycle-stable.svg}{options: alt='[Stable]'}}}{\strong{[Stable]}}

If the provided object is a \code{Failure} (in the case of a \code{Result} input) or
\code{Nothing} (in the case of an \code{Option} input), then the function will 'panic'
and throw an error of class \code{expect_panic}, with the message body set to
\code{msg}.
}
\examples{
Success(10) |> expect("This value should have been successfully computed")
Some("optional string") |> expect("Actually we require the string")
\dontrun{
Failure("Oh no I failed because of bad parameters") |> expect("This value should have been successfully computed")
Nothing() |> expect("Actually we require the string")
}

}
\seealso{
\code{\link[=expect_fail]{expect_fail()}} to unwrap details of a \code{Failure} instead,
\code{\link[=unwrap]{unwrap()}} for a similar function that doesn't require \code{msg}.
}
